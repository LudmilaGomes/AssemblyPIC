;*                     ARQUIVOS DE DEFINIÇÕES                      *
    
#INCLUDE <p16f628a.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675
    
   __CONFIG _BOREN_ON & _CP_OFF & _PWRTE_ON & _WDT_OFF & _LVP_OFF & _MCLRE_ON & _XT_OSC

;*                    PAGINAÇÃO DE MEMÓRIA                         *
   
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA   
#DEFINE	    BANK0   BCF STATUS, RP0
#DEFINE	    BANK1   BSF STATUS, RP0
   		
    CBLOCK	0x20	

	W_TEMP
	STATUS_TEMP
	;COLOQUE AQUI SUAS NOVAS VARIÁVEIS

    ENDC
    
;*                       VETOR DE RESET                            *
    
    ORG	0x00
    GOTO    INICIO
    
;*                    INÍCIO DA INTERRUPÇÃO                        *
    
    ; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
    ; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA    
    ORG	    0x04		;ENDEREÇO INICIAL DA INTERRUPÇÃO
    MOVWF   W_TEMP		;COPIA W PARA W_TEMP
    SWAPF   STATUS,W
    MOVWF   STATUS_TEMP		;COPIA STATUS PARA STATUS_TEMP
    
;*                    ROTINA DE INTERRUPÇÃO                        *
    
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
    
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	SWAPF   STATUS_TEMP,W
	MOVWF   STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF   W_TEMP,F
	SWAPF   W_TEMP,W		;MOVE W_TEMP PARA W
    RETFIE

;*	            	 ROTINAS E SUBROTINAS                      *

; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.

SUBROTINA1

	;CORPO DA ROTINA

	RETURN
	
;*                     INICIO DO PROGRAMA                          *
	
INICIO
	BANK1			;ALTERA PARA O BANCO 1
	; CONFIGURA ENTRADAS NAS PORTAS A
	MOVLW	B'00000011' 	
	MOVWF	TRISA
	; CONFIGURA SAÍDAS NAS PORTAS B
	MOVLW	B'00000000' 	
	MOVWF	TRISB
	; CONFIGURA PRESCALER DO TMR0
	MOVLW	B'10000111'
	MOVWF	OPTION_REG
	MOVLW	B'00000000'
	MOVWF	INTCON		
	; CONFIGURA VALOR DA TENSÃO DE REFERÊNCIA INICIAL
	MOVLW	B'11100010'
	MOVWF	VRCON		
	BANK0			;RETORNA PARA O BANCO 0
	; CONFIGURA USO DO COMPARADOR DO PIC
	MOVLW	B'00100101'
	MOVWF	CMCON
	
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
	
;*                     ROTINA PRINCIPAL                            *
	
MAIN
	; VAZIO.ASM DO LIVRO DESBRAVANDO O PIC FOI UTILIZADO COMO BASE!
	
	; INFORMAÇÕES DE COMO A SAÍDA CONECTADA AO DISPLAY 7 SEG. ESTÁ MAIS ABAIXO NO CÓDIGO!
	
	; ESSE CÓDIGO PARA INDICAR VALOR DA TENSÃO DE REFERÊNCIA EM 0.35V É ÚTIL PARA QUANDO
	; O PROGRAMA EXECUTOU E VOLTA AO COMEÇO DA MAIN PARA TRAZER A TENSÃO DE REF. PARA O 'COMEÇO'
	; VALOR DA REFERÊNCIA INTERNA DE 0.35V
	BANK1
	MOVLW	B'11100010'
	MOVWF	VRCON
	BANK0
	
	; COMEÇAMOS COM REFERÊNCIA INTERNA DE 0.35V
	; VAMOS VERIFICAR SE COUT == 1
	; SE COUT == 1, VALOR DE ENTRADA É MAIOR QUE 0.35V
	; ALTERAMOS PARA A REFERÊNCIA INTERNA SEGUINTE (QUE É 0,7V) E MUDAMOS A SAÍDA PARA 1
	
	; VERIFICA VALOR ATUAL DE COUT
	BTFSS	CMCON, C2OUT
	; SE VALOR ATUAL DE COUT == 0: EXECUTA INSTRUÇÃO SEGUINTE
	GOTO	SAIDA_VALOR0
	; SE VALOR ATUAL DE COUT == 1: EXECUTA SEGUNDA INSTRUÇÃO
	
	; VALOR DE COUT VOLTA PARA 0
	BCF	CMCON, C2OUT
	
	; MUDANÇA DO VALOR DA REFERÊNCIA INTERNA PARA 0.7V
	BANK1
	MOVLW	B'11100011'
	MOVWF	VRCON
	BANK0
	
	; REFERÊNCIA INTERNA AGORA DE 0.7V
	; VAMOS VERIFICAR SE COUT == 1
	; SE COUT == 1, VALOR DE ENTRADA É MAIOR QUE 0.7V
	; ALTERAMOS PARA A REFERÊNCIA INTERNA SEGUINTE (QUE É 1.05V) E MUDAMOS A SAÍDA PARA 2
	
	; VERIFICA VALOR ATUAL DE COUT
	BTFSS	CMCON, C2OUT
	; SE VALOR ATUAL DE COUT == 0: EXECUTA INSTRUÇÃO SEGUINTE
	GOTO	SAIDA_VALOR1
	; SE VALOR ATUAL DE COUT == 1: EXECUTA SEGUNDA INSTRUÇÃO
	
	; VALOR DE COUT VOLTA PARA 0
	BCF	CMCON, C2OUT
	
	; MUDANÇA DO VALOR DA REFERÊNCIA INTERNA PARA 1.05V
	BANK1
	MOVLW	B'11100101'
	MOVWF	VRCON
	BANK0
	
	; REFERÊNCIA INTERNA AGORA DE 1.05V
	; VAMOS VERIFICAR SE COUT == 1
	; SE COUT == 1, VALOR DE ENTRADA É MAIOR QUE 1.05V
	; ALTERAMOS PARA A REFERÊNCIA INTERNA SEGUINTE (QUE É 1.40V) E MUDAMOS A SAÍDA PARA 3
	
	; VERIFICA VALOR ATUAL DE COUT
	BTFSS	CMCON, C2OUT
	; SE VALOR ATUAL DE COUT == 0: EXECUTA INSTRUÇÃO SEGUINTE
	GOTO	SAIDA_VALOR2
	; SE VALOR ATUAL DE COUT == 1: EXECUTA SEGUNDA INSTRUÇÃO
	
	; VALOR DE COUT VOLTA PARA 0
	BCF	CMCON, C2OUT
	
	; MUDANÇA DO VALOR DA REFERÊNCIA INTERNA PARA 1.40V
	BANK1
	MOVLW	B'11000001'
	MOVWF	VRCON
	BANK0
	
	; REFERÊNCIA INTERNA AGORA DE 1.40V
	; VAMOS VERIFICAR SE COUT == 1
	; SE COUT == 1, VALOR DE ENTRADA É MAIOR QUE 1.40V
	; ALTERAMOS PARA A REFERÊNCIA INTERNA SEGUINTE (QUE É 1.75V) E MUDAMOS A SAÍDA PARA 4
	
	; VERIFICA VALOR ATUAL DE COUT
	BTFSS	CMCON, C2OUT
	; SE VALOR ATUAL DE COUT == 0: EXECUTA INSTRUÇÃO SEGUINTE
	GOTO	SAIDA_VALOR3
	; SE VALOR ATUAL DE COUT == 1: EXECUTA SEGUNDA INSTRUÇÃO
	
	; VALOR DE COUT VOLTA PARA 0
	BCF	CMCON, C2OUT
	
	; MUDANÇA DO VALOR DA REFERÊNCIA INTERNA PARA 1.75V
	BANK1
	MOVLW	B'11000011'
	MOVWF	VRCON
	BANK0
	
	; REFERÊNCIA INTERNA AGORA DE 1.75V
	; VAMOS VERIFICAR SE COUT == 1
	; SE COUT == 1, VALOR DE ENTRADA É MAIOR QUE 1.75V
	; ALTERAMOS PARA A REFERÊNCIA INTERNA SEGUINTE (QUE É 2.10V) E MUDAMOS A SAÍDA PARA 5
	
	; VERIFICA VALOR ATUAL DE COUT
	BTFSS	CMCON, C2OUT
	; SE VALOR ATUAL DE COUT == 0: EXECUTA INSTRUÇÃO SEGUINTE
	GOTO	SAIDA_VALOR4
	; SE VALOR ATUAL DE COUT == 1: EXECUTA SEGUNDA INSTRUÇÃO
	
	; VALOR DE COUT VOLTA PARA 0
	BCF	CMCON, C2OUT
	
	; MUDANÇA DO VALOR DA REFERÊNCIA INTERNA PARA 2.10V
	BANK1
	MOVLW	B'11101010'
	MOVWF	VRCON
	BANK0
	
	; REFERÊNCIA INTERNA AGORA DE 2.10V
	; VAMOS VERIFICAR SE COUT == 1
	; SE COUT == 1, VALOR DE ENTRADA É MAIOR QUE 2.10V
	; ALTERAMOS PARA A REFERÊNCIA INTERNA SEGUINTE (QUE É 2.45V) E MUDAMOS A SAÍDA PARA 6
	
	; VERIFICA VALOR ATUAL DE COUT
	BTFSS	CMCON, C2OUT
	; SE VALOR ATUAL DE COUT == 0: EXECUTA INSTRUÇÃO SEGUINTE
	GOTO	SAIDA_VALOR5
	; SE VALOR ATUAL DE COUT == 1: EXECUTA SEGUNDA INSTRUÇÃO
	
	; VALOR DE COUT VOLTA PARA 0
	BCF	CMCON, C2OUT
	
	; MUDANÇA DO VALOR DA REFERÊNCIA INTERNA PARA 2.45V
	BANK1
	MOVLW	B'11101100'
	MOVWF	VRCON
	BANK0
	
	; REFERÊNCIA INTERNA AGORA DE 2.45V
	; VAMOS VERIFICAR SE COUT == 1
	; SE COUT == 1, VALOR DE ENTRADA É MAIOR QUE 2.45V
	; ALTERAMOS PARA A REFERÊNCIA INTERNA SEGUINTE (QUE É 2.85V) E MUDAMOS A SAÍDA PARA 7
	
	; VERIFICA VALOR ATUAL DE COUT
	BTFSS	CMCON, C2OUT
	; SE VALOR ATUAL DE COUT == 0: EXECUTA INSTRUÇÃO SEGUINTE
	GOTO	SAIDA_VALOR6
	; SE VALOR ATUAL DE COUT == 1: EXECUTA SEGUNDA INSTRUÇÃO
	
	; VALOR DE COUT VOLTA PARA 0
	BCF	CMCON, C2OUT
	
	; MUDANÇA DO VALOR DA REFERÊNCIA INTERNA PARA 2.85V
	BANK1
	MOVLW	B'11001010'
	MOVWF	VRCON
	BANK0
	
	; REFERÊNCIA INTERNA AGORA DE 2.85V
	; VAMOS VERIFICAR SE COUT == 1
	; SE COUT == 1, VALOR DE ENTRADA É MAIOR QUE 2.85V
	; ALTERAMOS PARA A REFERÊNCIA INTERNA SEGUINTE (QUE É 3.20V) E MUDAMOS A SAÍDA PARA 8
	
	; VERIFICA VALOR ATUAL DE COUT
	BTFSS	CMCON, C2OUT
	; SE VALOR ATUAL DE COUT == 0: EXECUTA INSTRUÇÃO SEGUINTE
	GOTO	SAIDA_VALOR7
	; SE VALOR ATUAL DE COUT == 1: EXECUTA SEGUNDA INSTRUÇÃO
	
	; VALOR DE COUT VOLTA PARA 0
	BCF	CMCON, C2OUT
	
	; MUDANÇA DO VALOR DA REFERÊNCIA INTERNA PARA 3.20V
	BANK1
	MOVLW	B'11101111'
	MOVWF	VRCON
	BANK0
	
	; REFERÊNCIA INTERNA AGORA DE 3.20V
	; VAMOS VERIFICAR SE COUT == 1
	; SE COUT == 1, VALOR DE ENTRADA É MAIOR QUE 3.20V E MUDAMOS A SAÍDA PARA 9
	
	; VERIFICA VALOR ATUAL DE COUT
	BTFSS	CMCON, C2OUT
	; SE VALOR ATUAL DE COUT == 0: EXECUTA INSTRUÇÃO SEGUINTE
	GOTO	SAIDA_VALOR8
	; SE VALOR ATUAL DE COUT == 1: EXECUTA SEGUNDA INSTRUÇÃO
	GOTO	SAIDA_VALOR9
	
	; !!!!!!! CONFIGURAÇÃO E INFORMAÇÕES DAS SAÍDAS CONECTADAS AO DISPLAY 7 SEG. !!!!!!!
	
	; NA SAÍDA, CADA BIT REPRESENTA UM DOS SEGMENTOS DO DISPLAY
	; CONSIDERANDO QUE O DISPLAY APRESENTA 7 SEGMENTOS, O BIT MAIS SIGNIFICATIVO É DESCONSIDERADO (SEMPRE SERÁ 0)
	; E OS BITS RESTANTES REPRESENTAM OS SEGMENTOS; ABAIXO, A EQUIVALÊNCIA DOS BITS E SEGMENTOS:
	
	;	G F E D C B A
	;     7 6 5 4 3 2 1 0
	
	; (CONSIDERO QUE O DISPLAY USADO SEJA CÁTODO COMUM!!!)
	
; LABELS DAS 9 SAÍDAS POSSÍVEIS E SEUS VALORES CORRESPONDENTES
SAIDA_VALOR9
	MOVLW	B'01101111'
	MOVWF	PORTB
	GOTO	DEF_TIMER
	
SAIDA_VALOR8
	MOVLW	B'01111111'
	MOVWF	PORTB
	GOTO	DEF_TIMER
	
SAIDA_VALOR7
	MOVLW	B'00000111'
	MOVWF	PORTB
	GOTO	DEF_TIMER
	
SAIDA_VALOR6
	MOVLW	B'01111101'
	MOVWF	PORTB
	GOTO	DEF_TIMER
	
SAIDA_VALOR5
	MOVLW	B'01101101'
	MOVWF	PORTB
	GOTO	DEF_TIMER
	
SAIDA_VALOR4
	MOVLW	B'01100110'
	MOVWF	PORTB
	GOTO	DEF_TIMER
	
SAIDA_VALOR3
	MOVLW	B'01001111'
	MOVWF	PORTB
	GOTO	DEF_TIMER
	
SAIDA_VALOR2
	MOVLW	B'01011011'
	MOVWF	PORTB
	GOTO	DEF_TIMER
	
SAIDA_VALOR1
	MOVLW	B'00000110'
	MOVWF	PORTB
	GOTO	DEF_TIMER
	
SAIDA_VALOR0
	MOVLW	B'00111111'
	MOVWF	PORTB
	
DEF_TIMER
	
	; AGORA, DEFINIMOS O OFFSET DO REGISTRADOR TMR0 PARA ESPERAR POR 50ms
	; VALOR DE OFFSET DE .60 (PARA 50ms)
	MOVLW	.60
	MOVWF	TMR0
	
VERIF_TIMER
	; VERIFICA ESTOURO DO TMR0 A PARTIR DA FLAG DO REGISTRADOR INTCON
	BTFSS	INTCON, T0IF
	; AINDA NÃO HOUVE ESTOURO DO TIMER0 E CONTINUAMOS A ESPERAR
	GOTO	VERIF_TIMER
	; OCORREU ESTOURO E T0IF = 1
	; ASSIM, VOLTAMOS PARA O COMEÇO DO PROGRAMA
	BCF	INTCON, T0IF	; CLEAR FLAG DE ESTOURO DO TMR0
	GOTO	MAIN

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END